name: Deploy to Oracle Cloud

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    services:
      # Setup PostgreSQL service for testing
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: job_tracker_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Setup database for testing
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/job_tracker_test
        ENVIRONMENT: test
      run: |
        echo "DATABASE_URL=$DATABASE_URL" > .env
        echo "ENVIRONMENT=test" >> .env
        
    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/job_tracker_test
        ENVIRONMENT: test
      run: |
        pytest -v
        
    - name: Set up SSH key
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.ORACLE_SSH_KEY }}
        
    - name: Deploy to Oracle Cloud
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.ORACLE_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
        rsync -avz --exclude '.git' --exclude 'venv' --exclude '__pycache__' . ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }}:~/job-tracker/
        ssh ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "cd ~/job-tracker && bash scripts/deploy.sh"
